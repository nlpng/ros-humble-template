name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  ROS_DISTRO: humble

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: ros_template_node
            test_type: cpp
          - package: py_template_node
            test_type: python
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup ROS 2 Humble
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: humble
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-colcon-common-extensions \
          python3-rosdep \
          python3-pytest \
          ros-humble-foxglove-bridge
        
        # Initialize rosdep
        sudo rosdep init || true
        rosdep update
        
        # Install package dependencies
        rosdep install --from-paths src --ignore-src -r -y
    
    - name: Build packages
      run: |
        source /opt/ros/humble/setup.bash
        colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release
    
    - name: Run C++ tests
      if: matrix.test_type == 'cpp'
      run: |
        source /opt/ros/humble/setup.bash
        source install/setup.bash
        colcon test --packages-select ros_template_node
        colcon test-result --verbose
    
    - name: Run Python tests
      if: matrix.test_type == 'python'
      run: |
        source /opt/ros/humble/setup.bash
        source install/setup.bash
        colcon test --packages-select py_template_node
        colcon test-result --verbose
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.package }}
        path: |
          log/
          build/*/test_results/
  
  docker-test:
    runs-on: ubuntu-22.04
    needs: test
    strategy:
      matrix:
        profile: [default, python, dual, multi-node]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t ros-template:humble .
    
    - name: Test Docker Compose profile - ${{ matrix.profile }}
      run: |
        if [ "${{ matrix.profile }}" = "default" ]; then
          timeout 60s docker compose up --build || true
        else
          timeout 60s docker compose --profile ${{ matrix.profile }} up --build || true
        fi
        
        # Check that containers started successfully
        if [ "${{ matrix.profile }}" = "default" ]; then
          docker compose logs ros_template
        else
          docker compose --profile ${{ matrix.profile }} logs
        fi
    
    - name: Test ROS 2 topics
      run: |
        # Start containers in background
        if [ "${{ matrix.profile }}" = "default" ]; then
          docker compose up -d
          sleep 30
          
          # Test that topics are published
          docker exec ros_template_node ros2 topic list
          docker exec ros_template_node ros2 topic echo /template/status --max-count 1
          
          docker compose down
        else
          echo "Skipping topic test for profile ${{ matrix.profile }}"
        fi
  
  code-quality:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup ROS 2 Humble
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: humble
    
    - name: Install linting tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang-format \
          python3-flake8 \
          python3-pip \
          cppcheck
        
        pip3 install --user black mypy
    
    - name: C++ Code Quality
      run: |
        # Check C++ formatting
        find src/ros_template_node -name "*.cpp" -o -name "*.hpp" | xargs clang-format --dry-run --Werror
        
        # Static analysis
        cppcheck --error-exitcode=1 --enable=warning,style,performance \
          src/ros_template_node/src/ src/ros_template_node/include/
    
    - name: Python Code Quality
      run: |
        # Add pip install location to PATH
        export PATH=$PATH:$HOME/.local/bin
        
        # Check Python formatting
        python3 -m black --check src/py_template_node/py_template_node/ src/py_template_node/test/
        
        # Check Python style
        python3 -m flake8 src/py_template_node/py_template_node/ src/py_template_node/test/ --max-line-length=100
        
        # Type checking
        python3 -m mypy src/py_template_node/py_template_node/ --ignore-missing-imports
    
    - name: ROS 2 Linting
      run: |
        source /opt/ros/humble/setup.bash
        
        # Build with linting
        colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release
        
        # Run ROS 2 specific linting
        colcon test --packages-select ros_template_node py_template_node \
          --event-handlers console_direct+ --pytest-args "--verbose"
